{
  "couchbase.bucket.Bucket.__init__": {
    "username": "Any",
    "password": "Any",
    "quiet": "Any",
    "unlock_gil": "Any",
    "transcoder": "Any",
    "lockmode": "Any",
    "tracer": "Any"
  },
  "couchbase.bucket.Bucket.scope": {
    "scope_name": ":py:class:`str`"
  },
  "couchbase.bucket.Bucket.collection": {
    "collection_name": ":py:class:`str`"
  },
  "couchbase.collection.Scope.__init__": {
    "parent": ":py:class:`~couchbase.bucket.Bucket`"
  },
  "couchbase.collection.Scope.default_collection": {
    "collection_name": "Any",
    "options": ":py:data:`~typing.Any`"
  },
  "couchbase.collection.Scope.collection": {
    "collection_name": ":py:class:`str`",
    "options": ":py:class:`~couchbase.collection.CollectionOptions`"
  },
  "couchbase.collection.Collection.__init__": {
    "parent": "Any",
    "options": "Any"
  },
  "couchbase.collection.Collection.upsert": {
    "key": ":py:class:`str`",
    "id": "Any",
    "value": ":py:data:`~typing.Any`",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.insert": {
    "key": "Any",
    "value": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.replace": {
    "key": "Any",
    "value": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.get": {
    "key": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.BinaryCollection.append": {
    "key": "Any",
    "value": "Any"
  },
  "couchbase.collection.Collection.remove": {
    "key": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.get_and_lock": {
    "key": "Any",
    "expiry": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.unlock": {
    "key": "Any",
    "cas": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.get_and_touch": {
    "key": "Any",
    "expiry": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.touch": {
    "key": "Any",
    "expiry": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.lookup_in": {
    "key": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.mutate_in": {
    "key": ":py:class:`str`",
    "options": "Any",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase.collection.DeltaValue.__init__": {
    "value": "Any"
  },
  "couchbase.collection.BinaryCollection.increment": {
    "key": "Any",
    "delta": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.BinaryCollection.decrement": {
    "key": "Any",
    "delta": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.collection.Collection.upsert_multi": {
    "keys": "Any",
    "ttl": "Any",
    "format": "Any",
    "persist_to": "Any",
    "replicate_to": "Any",
    "durability_level": "Any"
  },
  "couchbase.collection.Collection.get_multi": {
    "keys": "Any"
  },
  "couchbase.collection.Collection.insert_multi": {
    "keys": "Any"
  },
  "couchbase.collection.Collection.remove_multi": {
    "keys": "Any"
  },
  "couchbase.cluster.Cluster.query": {
    "statement": "Any",
    "options": ":py:class:`~couchbase.cluster.QueryOptions`",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase.cluster.Cluster.query": {
    "statement": "Any",
    "options": ":py:class:`~couchbase.cluster.QueryOptions`",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase.cluster.Cluster.search_query": {
    "index": "Any",
    "query": "Any",
    "options": ":py:class:`~couchbase.search.SearchOptions`",
    "kwargs": "Any"
  },
  "couchbase_core.client.Client.get_multi": {
    "keys": ":py:class:`~typing.Iterable`\\[:py:class:`str`]",
    "durability_level": "Any"
  },
  "couchbase_core.client.Client.lock_multi": {
    "keys": ":py:class:`~typing.Iterable`\\[:py:class:`str`]"
  },
  "couchbase_core.client.Client.replace_multi": {
    "keys": "Any"
  },
  "couchbase_core.client.Client.touch_multi": {
    "keys": ":py:class:`~typing.Iterable`\\[:py:class:`str`]"
  },
  "couchbase_core.client.Client.unlock_multi": {
    "keys": "Any"
  },
  "couchbase_core.client.Client.upsert_multi": {
    "keys": "Any",
    "persist_to": "Any",
    "replicate_to": "Any",
    "durability_level": "Any"
  },
  "couchbase_core.client.Client.view_query": {
    "design": "Any",
    "view": "Any",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase_v2.bucket.Bucket.get": {
    "key": "Any"
  },
  "couchbase_v2.bucket.Bucket.query": {
    "design": "Any",
    "view": "Any",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase.management.collections.CollectionManager.create_scope": {
    "scope_name": "Any",
    "options": "Any",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase.management.collections.CollectionManager.drop_collection": {
    "collection": "Any",
    "options": "Any",
    "kwargs": ":py:data:`~typing.Any`"
  },
  "couchbase.management.collections.CollectionManager.get_scope": {
    "scope_name": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.management.buckets.BucketManager.drop_bucket": {
    "bucket_name": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.management.buckets.BucketManager.get_all_buckets": {
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.management.buckets.BucketManager.get_bucket": {
    "bucket_name": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.management.users.UserManager.get_all_users": {
    "domain_name": ":py:class:`str`",
    "options": ":py:class:`~couchbase.management.users.GetAllUsersOptions`",
    "timeout": "Any"
  },
  "couchbase.management.users.UserManager.get_group": {
    "group_name": "Any",
    "timeout": "Any"
  },
  "couchbase.management.users.UserManager.get_roles": {
    "options": ":py:class:`~couchbase.management.users.GetRolesOptions`",
    "timeout": "Any"
  },
  "couchbase.management.users.UserManager.get_user": {
    "username": "Any",
    "timeout": "Any"
  },
  "couchbase.management.queries.QueryIndexManager.create_index": {
    "bucket_name": "Any",
    "index_name": "Any",
    "fields": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.management.queries.QueryIndexManager.get_all_indexes": {
    "bucket_name": "Any",
    "options": "Any",
    "kwargs": "Any"
  },
  "couchbase.result.Result": {
    "cas": "Any",
    "error": "Any"
  },
  "couchbase.subdocument.exists": {
    "path": "Any"
  },
  "couchbase.subdocument.get": {
    "path": "Any"
  },
  "couchbase.subdocument.count": {
    "path": ":py:class:`str`"
  },
  "couchbase.subdocument.upsert": {
    "path": "Any",
    "value": "Any"
  },
  "couchbase.subdocument.replace": {
    "path": "Any",
    "value": ":py:data:`~typing.Union`\\[:py:class:`str`, :py:class:`int`, :py:class:`float`, :py:class:`bool`, ``None``, :py:class:`~typing.Mapping`\\[:py:class:`str`, :py:class:`~typing.ForwardRef`], :py:class:`~typing.List`\\[:py:class:`~typing.ForwardRef`]]"
  },
  "couchbase.subdocument.insert": {
    "path": "Any",
    "value": "Any"
  },
  "couchbase.subdocument.array_append": {
    "path": "Any",
    "values": "Any",
    "kwargs": "Any"
  },
  "couchbase.subdocument.array_prepend": {
    "path": "Any",
    "values": "Any",
    "kwargs": "Any"
  },
  "couchbase.subdocument.array_insert": {
    "path": "Any",
    "values": ":py:data:`~typing.Union`\\[:py:class:`str`, :py:class:`int`, :py:class:`float`, :py:class:`bool`, ``None``, :py:class:`~typing.Mapping`\\[:py:class:`str`, :py:class:`~typing.ForwardRef`], :py:class:`~typing.List`\\[:py:class:`~typing.ForwardRef`]]"
  },
  "couchbase.subdocument.array_addunique": {
    "path": "Any",
    "value": "Any"
  },
  "couchbase.subdocument.remove": {
    "path": "Any"
  },
  "couchbase.subdocument.counter": {
    "path": "Any",
    "delta": "Any"
  },
  "couchbase.subdocument.exists": {
    "path": "Any"
  }
}